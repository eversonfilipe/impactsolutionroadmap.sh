import React from 'react';

/**
 * Props for the StreamingResponseDisplay component.
 */
interface StreamingResponseDisplayProps {
  /** The raw text streamed from the AI so far. */
  text: string;
}

/**
 * A component to display the real-time streamed response from the AI.
 * It provides a "live typing" effect that gives the user immediate feedback
 * that the AI is working and generating their roadmap.
 */
const StreamingResponseDisplay: React.FC<StreamingResponseDisplayProps> = ({ text }) => {
  return (
    <div className="mt-8 p-6 bg-brand-secondary border border-brand-border rounded-lg animate-fade-in">
      <h3 className="text-xl font-semibold text-brand-text-primary mb-4">AI Generation in Progress...</h3>
      <div className="bg-brand-primary p-4 rounded-md overflow-x-auto text-sm font-mono whitespace-pre-wrap break-all">
        {/* We render the text inside a <code> block for a monospaced font, ideal for showing raw data. */}
        <code>{text}</code>
        {/* The blinking cursor provides a strong visual cue of live activity. */}
        <span className="blinking-cursor">|</span>
      </div>
      <p className="text-xs text-brand-text-secondary mt-4">
        Displaying the raw JSON response as it's being generated by the AI. The final roadmap will be formatted upon completion.
      </p>

      {/* Inline styles for simple animations. */}
      <style>{`
        .blinking-cursor {
          font-weight: bold;
          animation: blink 1s step-end infinite;
        }
        @keyframes blink {
          from, to {
            color: transparent;
          }
          50% {
            color: #58A6FF; /* brand-accent */
          }
        }
        .animate-fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
      `}</style>
    </div>
  );
};

export default StreamingResponseDisplay;
